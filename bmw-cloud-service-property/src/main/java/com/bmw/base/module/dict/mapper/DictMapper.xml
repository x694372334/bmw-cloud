<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bmw.base.module.dict.mapper.DictMapper" >

    <resultMap id="BaseResultMap" type="com.bmw.base.module.dict.domain.Dict" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="num" property="num" jdbcType="INTEGER" />
        <result column="pid" property="pid" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="tips" property="tips" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="column" >
        id, num, pid, name, tips
    </sql>

    <sql id="column2" >
        sys_dict.id, sys_dict.num, sys_dict.pid, sys_dict.name, sys_dict.tips
    </sql>

    <sql id="column3" >
        sys_dict.id as id, sys_dict.num as num, sys_dict.pid as pid, sys_dict.name as name, 
        sys_dict.tips as tips
    </sql>

    <sql id="equal" >
        <if test="id != null" >
             AND id = #{id}
        </if>
        <if test="num != null" >
             AND num = #{num}
        </if>
        <if test="pid != null" >
             AND pid = #{pid}
        </if>
        <if test="name != null and name != '' and name != 'null'" >
             AND name = #{name}
        </if>
        <if test="tips != null and tips != '' " >
             AND tips = #{tips}
        </if>
    </sql>

    <sql id="like" >
        <if test="id != null" >
             AND id like CONCAT('%',#{id},'%')
        </if>
        <if test="num != null" >
             AND num like CONCAT('%',#{num},'%')
        </if>
        <if test="pid != null" >
             AND pid like CONCAT('%',#{pid},'%')
        </if>
        <if test="name != null and name != '' and name != 'null' " >
             AND name like CONCAT('%',#{name},'%')
        </if>
        <if test="tips != null and tips != '' " >
             AND tips like CONCAT('%',#{tips},'%')
        </if>
    </sql>

    <insert id="add" parameterType="com.bmw.base.module.dict.domain.Dict" >
    	
      	<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
          SELECT LAST_INSERT_ID()
      	</selectKey>
        insert into sys_dict
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="num != null" >
                num,
            </if>
            <if test="pid != null" >
                pid,
            </if>
            <if test="name != null and name != '' " >
                name,
            </if>
            <if test="tips != null and tips != '' " >
                tips,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="num != null" >
                #{num,jdbcType=INTEGER},
            </if>
            <if test="pid != null" >
                #{pid,jdbcType=INTEGER},
            </if>
            <if test="name != null and name != '' " >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="tips != null and tips != '' " >
                #{tips,jdbcType=VARCHAR},
            </if>
        </trim>
        
    </insert>

    <delete id="delete" parameterType="java.lang.Integer" >
        delete from sys_dict
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <update id="update" parameterType="com.bmw.base.module.dict.domain.Dict" >
        update sys_dict
        <set >
            <if test="num != null" >
                num = #{num,jdbcType=INTEGER},
            </if>
            <if test="pid != null" >
                pid = #{pid,jdbcType=INTEGER},
            </if>
            <if test="name != null and name != '' " >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="tips != null and tips != '' " >
                tips = #{tips,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="column" />
        from sys_dict
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="findLike" resultType="Dict" parameterType="Dict" >
        select 
        <include refid="column3" />
        from sys_dict
        <where >
            <include refid="like" />
        </where>
    </select>

    <select id="findList" resultType="Dict" parameterType="Dict" >
        select 
        <include refid="column3" />
        from sys_dict
        <where >
            <include refid="equal" />
        </where>
    </select>
   
    <select id="getDictByCode" resultType="Dict" parameterType="Dict" >
        select 
       	s.id AS id,
		s.num AS num,
		s.pid AS pid,
		s. NAME AS NAME,
		s.tips AS tips
        from sys_dict s where s.pid = (select t.id from sys_dict t where t.name = #{name,jdbcType=VARCHAR})
   
    </select>
</mapper>