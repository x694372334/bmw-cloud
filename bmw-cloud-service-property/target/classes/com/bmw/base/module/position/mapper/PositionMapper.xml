<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bmw.base.module.position.mapper.PositionMapper" >

    <resultMap id="BaseResultMap" type="com.bmw.base.module.position.domain.Position" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="code" property="code" jdbcType="VARCHAR" />
        <result column="parent_code" property="parentCode" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="sort" property="sort" jdbcType="VARCHAR" />
        <result column="level" property="level" jdbcType="INTEGER" />
        <result column="is_leaf" property="isLeaf" jdbcType="INTEGER" />
        <result column="children_count" property="childrenCount" jdbcType="INTEGER" />
        <result column="create_man_id" property="createManId" jdbcType="INTEGER" />
        <result column="create_man" property="createMan" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="DATE" />
        <result column="edit_man_id" property="editManId" jdbcType="INTEGER" />
        <result column="edit_man" property="editMan" jdbcType="VARCHAR" />
        <result column="edit_time" property="editTime" jdbcType="DATE" />
        <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    </resultMap>

    <sql id="column" >
        id, code, parent_code, name, sort, level, is_leaf, children_count, create_man_id, 
        create_man, create_time, edit_man_id, edit_man, edit_time, is_delete
    </sql>

    <sql id="column2" >
        sys_position.id, sys_position.code, sys_position.parent_code, sys_position.name, 
        sys_position.sort, sys_position.level, sys_position.is_leaf, sys_position.children_count, 
        sys_position.create_man_id, sys_position.create_man, sys_position.create_time, sys_position.edit_man_id, 
        sys_position.edit_man, sys_position.edit_time, sys_position.is_delete
    </sql>

    <sql id="column3" >
        sys_position.id as id, sys_position.code as code, sys_position.parent_code as parentCode, 
        sys_position.name as name, sys_position.sort as sort, sys_position.level as level, 
        sys_position.is_leaf as isLeaf, sys_position.children_count as childrenCount, sys_position.create_man_id as createManId, 
        sys_position.create_man as createMan, sys_position.create_time as createTime, sys_position.edit_man_id as editManId, 
        sys_position.edit_man as editMan, sys_position.edit_time as editTime, sys_position.is_delete as isDelete
    </sql>

    <sql id="equal" >
        <if test="id != null" >
             AND id = #{id}
        </if>
        <if test="code != null and code != '' " >
             AND code = #{code}
        </if>
        <if test="parentCode != null and parentCode != '' " >
             AND parent_code = #{parentCode}
        </if>
        <if test="name != null and name != '' " >
             AND name = #{name}
        </if>
        <if test="sort != null and sort != '' " >
             AND sort = #{sort}
        </if>
        <if test="level != null" >
             AND level = #{level}
        </if>
        <if test="isLeaf != null" >
             AND is_leaf = #{isLeaf}
        </if>
        <if test="childrenCount != null" >
             AND children_count = #{childrenCount}
        </if>
        <if test="createManId != null" >
             AND create_man_id = #{createManId}
        </if>
        <if test="createMan != null and createMan != '' " >
             AND create_man = #{createMan}
        </if>
        <if test="createTime != null" >
             <![CDATA[ AND create_time = #{createTime} ]]>
        </if>
        <if test="editManId != null" >
             AND edit_man_id = #{editManId}
        </if>
        <if test="editMan != null and editMan != '' " >
             AND edit_man = #{editMan}
        </if>
        <if test="editTime != null" >
             <![CDATA[ AND edit_time = #{editTime} ]]>
        </if>
        <if test="isDelete != null" >
             AND is_delete = #{isDelete}
        </if>
    </sql>

    <sql id="like" >
        <if test="id != null" >
             AND id like CONCAT('%',#{id},'%')
        </if>
        <if test="code != null and code != '' " >
             AND code like CONCAT('%',#{code},'%')
        </if>
        <if test="parentCode != null and parentCode != '' " >
             AND parent_code like CONCAT('%',#{parentCode},'%')
        </if>
        <if test="name != null and name != '' " >
             AND name like CONCAT('%',#{name},'%')
        </if>
        <if test="sort != null and sort != '' " >
             AND sort like CONCAT('%',#{sort},'%')
        </if>
        <if test="level != null" >
             AND level like CONCAT('%',#{level},'%')
        </if>
        <if test="isLeaf != null" >
             AND is_leaf like CONCAT('%',#{isLeaf},'%')
        </if>
        <if test="childrenCount != null" >
             AND children_count like CONCAT('%',#{childrenCount},'%')
        </if>
        <if test="createManId != null" >
             AND create_man_id like CONCAT('%',#{createManId},'%')
        </if>
        <if test="createMan != null and createMan != '' " >
             AND create_man like CONCAT('%',#{createMan},'%')
        </if>
        <if test="createTime != null" >
             AND create_time like CONCAT('%',#{createTime},'%')
        </if>
        <if test="editManId != null" >
             AND edit_man_id like CONCAT('%',#{editManId},'%')
        </if>
        <if test="editMan != null and editMan != '' " >
             AND edit_man like CONCAT('%',#{editMan},'%')
        </if>
        <if test="editTime != null" >
             AND edit_time like CONCAT('%',#{editTime},'%')
        </if>
        <if test="isDelete != null" >
             AND is_delete like CONCAT('%',#{isDelete},'%')
        </if>
    </sql>

    <insert id="add" parameterType="com.bmw.base.module.position.domain.Position" >
        insert into sys_position
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="code != null and code != '' " >
                code,
            </if>
            <if test="parentCode != null and parentCode != '' " >
                parent_code,
            </if>
            <if test="name != null and name != '' " >
                name,
            </if>
            <if test="sort != null and sort != '' " >
                sort,
            </if>
            <if test="level != null" >
                level,
            </if>
            <if test="isLeaf != null" >
                is_leaf,
            </if>
            <if test="childrenCount != null" >
                children_count,
            </if>
            <if test="createManId != null" >
                create_man_id,
            </if>
            <if test="createMan != null and createMan != '' " >
                create_man,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="editManId != null" >
                edit_man_id,
            </if>
            <if test="editMan != null and editMan != '' " >
                edit_man,
            </if>
            <if test="editTime != null" >
                edit_time,
            </if>
            <if test="isDelete != null" >
                is_delete,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="code != null and code != '' " >
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="parentCode != null and parentCode != '' " >
                #{parentCode,jdbcType=VARCHAR},
            </if>
            <if test="name != null and name != '' " >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="sort != null and sort != '' " >
                #{sort,jdbcType=VARCHAR},
            </if>
            <if test="level != null" >
                #{level,jdbcType=INTEGER},
            </if>
            <if test="isLeaf != null" >
                #{isLeaf,jdbcType=INTEGER},
            </if>
            <if test="childrenCount != null" >
                #{childrenCount,jdbcType=INTEGER},
            </if>
            <if test="createManId != null" >
                #{createManId,jdbcType=INTEGER},
            </if>
            <if test="createMan != null and createMan != '' " >
                #{createMan,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=DATE},
            </if>
            <if test="editManId != null" >
                #{editManId,jdbcType=INTEGER},
            </if>
            <if test="editMan != null and editMan != '' " >
                #{editMan,jdbcType=VARCHAR},
            </if>
            <if test="editTime != null" >
                #{editTime,jdbcType=DATE},
            </if>
            <if test="isDelete != null" >
                #{isDelete,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <delete id="delete" parameterType="java.lang.Integer" >
        delete from sys_position
        where id = #{id,jdbcType=INTEGER}
        or id in ( select * from (
		select a.id from sys_position a left JOIN sys_position b on
		a.parent_code = b.code where b.id =  #{id,jdbcType=INTEGER}) as temp
		)
    </delete>

    <update id="update" parameterType="com.bmw.base.module.position.domain.Position" >
        update sys_position
        <set >
            <if test="code != null and code != '' " >
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="parentCode != null and parentCode != '' " >
                parent_code = #{parentCode,jdbcType=VARCHAR},
            </if>
            <if test="name != null and name != '' " >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="sort != null and sort != '' " >
                sort = #{sort,jdbcType=VARCHAR},
            </if>
            <if test="level != null" >
                level = #{level,jdbcType=INTEGER},
            </if>
            <if test="isLeaf != null" >
                is_leaf = #{isLeaf,jdbcType=INTEGER},
            </if>
            <if test="childrenCount != null" >
                children_count = #{childrenCount,jdbcType=INTEGER},
            </if>
            <if test="createManId != null" >
                create_man_id = #{createManId,jdbcType=INTEGER},
            </if>
            <if test="createMan != null and createMan != '' " >
                create_man = #{createMan,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=DATE},
            </if>
            <if test="editManId != null" >
                edit_man_id = #{editManId,jdbcType=INTEGER},
            </if>
            <if test="editMan != null and editMan != '' " >
                edit_man = #{editMan,jdbcType=VARCHAR},
            </if>
            <if test="editTime != null" >
                edit_time = #{editTime,jdbcType=DATE},
            </if>
            <if test="isDelete != null" >
                is_delete = #{isDelete,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="column" />
        from sys_position
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="findLike" resultType="Position" parameterType="Position" >
        select 
        <include refid="column3" />
        from sys_position
        <where >
            <include refid="like" />
        </where>
    </select>

    <select id="findList" resultType="Position" parameterType="Position" >
        select 
        <include refid="column3" />
        from sys_position
        <where >
            <include refid="equal" />
        </where>
    </select>
    
      <select id="positionTreeList" resultType="com.bmw.common.utils.oa.ZTreeNode">
 SELECT
	m1.id AS id,
	(
		CASE
		WHEN (m2.id = -1 OR m2.id IS NULL) THEN
			0
		ELSE
			m2.id
		END
	) AS pId,
	m1. NAME AS NAME,
	(
		CASE
		WHEN (m2.id = -1 OR m2.id IS NULL) THEN
			'true'
		ELSE
			'false'
		END
	) AS isOpen ,
 m1.code as pcode
FROM
	sys_position m1
LEFT JOIN sys_position m2 ON m1.parent_code = m2. CODE
where m1.is_delete=0 
ORDER BY
	m1.id ASC
    </select>
    
    
    <select id="positionCountCode" resultType="java.lang.String">
    select count(a.parent_code) from sys_position as a
     where a.parent_code = #{code,jdbcType=VARCHAR}
    </select>
    
      <select id="positionCountIsCode" resultType="java.lang.String">
    select count(a.parent_code) from sys_position as a
     where a.parent_code = #{code,jdbcType=VARCHAR}
     and is_delete=0
    </select>
    
    
    <select id="positionCodeSelect" resultType="java.lang.String">
    select id from sys_position as a
     where a.code = #{code,jdbcType=VARCHAR}
    </select>
    
    <select id="positionDeleteUpdate" resultType="Position">
    select  
    <include refid="column3" />
     from sys_position 
    where code=#{code,jdbcType=VARCHAR}
    </select>
    
</mapper>