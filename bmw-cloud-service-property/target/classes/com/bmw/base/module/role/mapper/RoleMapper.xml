<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bmw.base.module.role.mapper.RoleMapper" >

    <resultMap id="BaseResultMap" type="com.bmw.base.module.role.domain.Role" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="num" property="num" jdbcType="INTEGER" />
        <result column="pid" property="pid" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="parent_e_id" property="parentEId" jdbcType="INTEGER" />
        <result column="deptid" property="deptid" jdbcType="INTEGER" />
        <result column="tips" property="tips" jdbcType="VARCHAR" />
        <result column="version" property="version" jdbcType="INTEGER" />
        <result column="type" property="type" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="column" >
        id, num, pid, name, parent_e_id, deptid, tips, version,type
    </sql>

    <sql id="column2" >
        sys_role.id, sys_role.num, sys_role.pid, sys_role.name, sys_role.parent_e_id, sys_role.deptid, 
        sys_role.tips, sys_role.version , sys_role.type
    </sql>

    <sql id="column3" >
        sys_role.id as id, sys_role.num as num, sys_role.pid as pid, sys_role.name as name, 
        sys_role.parent_e_id as parentEId, sys_role.deptid as deptid, sys_role.tips as tips, 
        sys_role.version as version ,sys_role.type as type
    </sql>

    <sql id="equal" >
        <if test="id != null" >
             AND id = #{id}
        </if>
        <if test="num != null" >
             AND num = #{num}
        </if>
        <if test="pid != null" >
             AND pid = #{pid}
        </if>
        <if test="name != null and name != '' " >
             AND name = #{name}
        </if>
        <if test="parentEId != null" >
             AND parent_e_id = #{parentEId}
        </if>
        <if test="deptid != null" >
             AND deptid = #{deptid}
        </if>
        <if test="tips != null and tips != '' " >
             AND tips = #{tips}
        </if>
        <if test="type != null and type != '' " >
             AND type = #{type}
        </if>
        <if test="version != null" >
             AND version = #{version}
        </if>
    </sql>

    <sql id="like" >
        <if test="id != null" >
             AND id like CONCAT('%',#{id},'%')
        </if>
        <if test="num != null" >
             AND num like CONCAT('%',#{num},'%')
        </if>
        <if test="pid != null" >
             AND pid like CONCAT('%',#{pid},'%')
        </if>
        <if test="name != null and name != '' " >
             AND name like CONCAT('%',#{name},'%')
        </if>
        <if test="parentEId != null" >
             AND parent_e_id = #{parentEId}
        </if>
        <if test="deptid != null" >
             AND deptid like CONCAT('%',#{deptid},'%')
        </if>
        <if test="tips != null and tips != '' " >
             AND tips like CONCAT('%',#{tips},'%')
        </if>
        <if test="version != null" >
             AND version like CONCAT('%',#{version},'%')
        </if>
        <if test="type != null and type != '' " >
             AND type = #{type}
        </if>
    </sql>

    <insert id="add" parameterType="com.bmw.base.module.role.domain.Role" >
        insert into sys_role
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="num != null" >
                num,
            </if>
            <if test="pid != null" >
                pid,
            </if>
            <if test="name != null and name != '' " >
                name,
            </if>
            <if test="parentEId != null" >
                parent_e_id,
            </if>
            <if test="deptid != null" >
                deptid,
            </if>
            <if test="tips != null and tips != '' " >
                tips,
            </if>
            <if test="type != null and type != '' " >
                type,
            </if>
            <if test="version != null" >
                version,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="num != null" >
                #{num,jdbcType=INTEGER},
            </if>
            <if test="pid != null" >
                #{pid,jdbcType=INTEGER},
            </if>
            <if test="name != null and name != '' " >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="parentEId != null" >
                #{parentEId,jdbcType=INTEGER},
            </if>
            <if test="deptid != null" >
                #{deptid,jdbcType=INTEGER},
            </if>
            <if test="tips != null and tips != '' " >
                #{tips,jdbcType=VARCHAR},
            </if>
             <if test="type != null and type != '' " >
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="version != null" >
                #{version,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <delete id="delete" parameterType="java.lang.Integer" >
        delete from sys_role
        where id = #{id,jdbcType=INTEGER} or pid = #{id,jdbcType=INTEGER} 
    </delete>

    <update id="update" parameterType="com.bmw.base.module.role.domain.Role" >
        update sys_role
        <set >
            <if test="num != null" >
                num = #{num,jdbcType=INTEGER},
            </if>
            <if test="pid != null" >
                pid = #{pid,jdbcType=INTEGER},
            </if>
            <if test="name != null and name != '' " >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="parentEId != null" >
                parent_e_id = #{parentEId,jdbcType=INTEGER},
            </if>
            <if test="deptid != null" >
                deptid = #{deptid,jdbcType=INTEGER},
            </if>
            <if test="tips != null and tips != '' " >
                tips = #{tips,jdbcType=VARCHAR},
            </if>
            <if test="type != null and type != '' " >
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="version != null" >
                version = #{version,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="column" />
        from sys_role
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="findLike" resultType="Role" parameterType="Role" >
        select 
        <include refid="column3" />
        from sys_role
        <where >
            <include refid="like" />
        </where>
    </select>

    <select id="findList" resultType="Role" parameterType="Role" >
        select 
        <include refid="column3" />
        from sys_role
        <where >
            <include refid="equal" />
        </where>
    </select>
    
    <delete id="deleteRolesById">
		delete from sys_relation where roleid = #{roleId}
	</delete>
	
	<select id="roleTreeList" resultType="com.bmw.common.utils.oa.ZTreeNode">
		select id "id",pId
		"pId",name as "name",(case when (pId=0 or pId is null) then 'true'
		else 'false' end) "open" from sys_role where id = 1 or version = 1
	</select>
	
	<select id="roleTreeListByRoleId" resultType="com.bmw.common.utils.oa.ZTreeNode">
		SELECT
		r.id "id",
		pId "pId",
		NAME AS "name",
		(
		CASE
		WHEN (pId = 0 OR pId IS NULL) THEN
		'true'
		ELSE
		'false'
		END
		) "open",
		(
		CASE
		WHEN (r1.ID = 0 OR r1.ID IS NULL) THEN
		'false'
		ELSE
		'true'
		END
		) "checked"
		FROM
		sys_role r
		LEFT JOIN (
		SELECT
		ID
		FROM
		sys_role
		WHERE
		ID IN

		<foreach collection="array" index="index" item="i" open="(" separator="," close=")">
			#{i}
		</foreach>

		) r1 ON r.ID = r1.ID
		ORDER BY
		pId,
		num ASC
	</select>
	
	<!-- 根据企业ID（非物业）查询角色 -->
	<select id="roleTreeListByParentEId"
	resultType="com.bmw.common.utils.oa.ZTreeNode">
	SELECT
	r.id "id",
	pId "pId",
	CONCAT(NAME,"(",
	(select en.short_name from enterprise_info en INNER JOIN sys_department de on en.e_id = de.e_id where de.id = r.deptid )
	,")")
	AS "name",
	(
	CASE
	WHEN (pId = 0 OR pId IS NULL) THEN
	'true'
	ELSE
	'false'
	END
	) "open",
	(
	CASE
	WHEN (r1.ID = 0 OR r1.ID IS NULL) THEN
	'false'
	ELSE
	'false'
	END
	) "checked",
	r.parent_e_id as parenteid
	FROM
	sys_role r
	LEFT JOIN (
	SELECT
	ID
	FROM
	sys_role
	) r1 ON r.ID = r1.ID
	where r.parent_e_id = #{parenteid}
	and r.version != 1
	ORDER BY
	pId,
	num ASC
</select>
	
	
</mapper>